---
page_id: 0c1d2e3f-4a5b-6c7d-8e9f-0a1b2c3d4e5f
title: Kinde Documentation - Billing
description: "Complete documentation for Kinde's billing section containing titles, descriptions, keywords, topics, and full content from all documentation files in this section for LLM training"
sidebar:
  order: 1
topics:
  - llm
  - documentation
  - training
  - billing
sdk: []
languages:
  - markdown
  - text
audience: developers
complexity: beginner
keywords:
  - llm training
  - documentation
  - billing
  - section
  - frontmatter
  - metadata
  - kinde
updated: 2025-09-18
featured: false
deprecated: false
ai_summary: "Complete documentation for Kinde's billing section containing titles, descriptions, keywords, topics, and full content from all documentation files in this section for LLM training"
---

# Kinde Documentation - Billing

This is the complete documentation for Kinde's billing section containing titles, descriptions, keywords, topics, and full content from all documentation files in this section.

# Billing - About billing - About billing

> Overview of Kinde billing capabilities including plan management, pricing tables, payment processing, and customer lifecycle management.

billing, plans, pricing, Stripe, customer lifecycle, revenue, subscriptions
billing

Kinde billing gives you the ability to charge customers for your services and collect revenue. As part of using this feature, you can: - Create and manage plans, and make them visible to your customers - Create and customize a pricing table for plan selection - Implement specific pricing models to suit your product - Use Stripe for secure handling of payments and invoicing - Link organizations (B2B) and individual customers (B2C) to a plan - Handle plan upgrade, downgrade, and cancellation - Enable self-serve account management for customers - Customize the pricing table to make the whole experience on-brand Billing makes the Kinde platform _the_ essential development infrastructure for managing the customer lifecycle across every part of your business. From registration to plan selection, authorization to provisioning, releases to upgrades. ## This is our first billing release Billing is a really complex area of app development, so while this release is tested and ready, we are actively working on improvements from day one. ### How to send feedback It would be amazing if you can send any feedback you have [support@kinde.com](mailto:support@kinde.com) so we can quickly collect and prioritize improvements. ## Known limitations These are current limitations that we are aware of and are working on adding. - Support for plan models with free trial periods - Annual and quarterly subscriptions. Only monthly is available right now. - Changes to the billing cycle (e.g. choose billing anniversaries, etc.) - Add-ons and discounts that can be applied to individual subscriptions

# Billing - About billing - Billing concepts & terms

> Comprehensive guide to billing concepts and terminology including plan groups, features, pricing models, and common billing terms.

billing concepts, plan groups, features, pricing models, metered usage, fixed charges, multi-currency
billing

'Billing' refers to the broad function of creating plans, setting pricing, collecting payments, etc. Here are some of the common concepts and terms you will come across. ## Billing identifiers - **Customer ID** - A `customer_id` uniquely identifies a user or org who has signed up to a plan. This is different to a `user_id` or `org_id` that identifies the user or org as an entity. - **Customer Agreement ID** - A `customer_agreement_id` identifies the contract or agreement created in Stripe when a plan is signed up to. The agreement ID is then associated with the `customer_id` in Kinde. ## Key concepts - **Plan groups** - Plan groups organize multiple plans under a common category, helping segment offerings by use case, customer size, or market. A group is scoped to either organizations (B2B) or individual customers (B2C). You can have multiple plan groups, but each plan must belong to a group. - **Plans** - Plans define the specific features, usage limits, and pricing tiers offered to customers in a SaaS product. - **Features** - Plan features are the specific capabilities or entitlements included in a plan. They can be chargeable (incurring additional fees) or non-chargeable (included at no extra cost). Features can be metered (usage-based) or unmetered (fixed access). - **Fixed charges**- Single chargeable items like the subscription base price and other stand alone recurring charges. - **Pricing models** - Pricing models are the different methods of charging customers, such as flat-rate, usage-based, tiered, per-seat pricing, etc. Your pricing model is determined by your product and customer needs. Consider scalability and longevity when deciding this. - **Payments processor** - A payments processor is a third-party service that securely processes customer payments via credit cards, ACH, or other methods - such as Stripe Billing. - **Pricing table** - A pricing table is a visual representation of your different subscription plans, showcasing features and prices to help users compare options. You can build one in Kinde and then show it to your customers in the auth flow or self-service portal. - **Self-serve account portal** - Kinde provides a self-serve portal. This allows customers to manage their subscriptions—such as upgrading plans, updating payment information, or cancelling. This reduces support overhead and improves user autonomy. In Kinde, you can decide what your customers can self-manage or remove the functionality completely. ## Common billing terms - **Agreement** - the term used in Stripe and the Kinde API to refer to a customer's subscription. Both terms are used throughout docs. - **Base price** – The starting cost of a subscription plan, typically the cost for a core set of features or a minimum level of usage. - **Chargeable / Non-chargeable feature** – - **Chargeable feature**: Incurs an additional fee when used. Might be metered or per unit price. - **Non-chargeable feature**: Add non-chargeable features for any included features which aren't independently chargeable, but need to be gated in your product. - **Feature** – A specific function or capability of your SaaS product that you provision for app users. In context with a plan, these are chargeable or non-chargeable features that are provisioned to customers. - **Fixed charge** – A recurring fee that does not change based on usage, often applied monthly or annually. Use this for a plan’s base price or other flat recurring fees. - **Metered and unmetered feature** – Metered features are provisioned in units, often with pricing per unit, e.g. MAU. An unmetered feature is like a boolean, and is a basic feature with no pricing attached. - **Multi-currency** – The ability to set plan prices in different currencies to support global customers. Kinde supports nearly all currencies, but you can currently only pick one as the default for all plans. - **Plan** – A packaged offering of features, prices, and terms available for subscription, typically tiered across a group (e.g., Basic, Pro, Enterprise). - **Plan group** – A collection of related plans, often grouped by customer type or usage level, allowing easier management and comparison. - **Pricing model** – The structure used to determine how features in a plan are priced. E.g. fixed charge, tiered, per-user, or usage-based pricing. Kinde lets you use multiple pricing models within one plan. - **Subscription** – The ongoing agreement where a customer pays for access to a SaaS product via a recurring plan. This is referred to as an agreement in Stripe. - **Tiered pricing** – This refers to unit pricing that has different unit costs based on the volume of units purchased. E.g. $10 per unit for 1–10 units, $8 per unit for 11–50 units, $5 per unit over 51 units. - **Unit price** – Where a price is set per unit of usage, e.g. a seat or license. Unit prices can also be applied to metered features, e.g. x per unit. Unit prices can also be tiered, e.g. x per unit up to 10 units, then y for 10+ units. - **Usage-based** **price** – A billing method where charges vary based on the metered consumption of resources or services (e.g., API calls, storage).

# Billing - About billing - Top questions about Kinde billing

> A collection of the top questions and answers about how to set up and configure Kinde billing for your Kinde business.

billing, plans, plan selector, entitlements, feature charges, pricing models, MAU, Stripe
billing, plans, plan selector, entitlements, feature charges, pricing models, MAU, Stripe

Here are short answers to the most common billing questions. Click any question to expand the answer. <Aside title="Ask the docs"> Type **@kindeAI** to access 24/7 global support in the **#ask-kinde-ai** channel in the Kinde [Slack](https://join.slack.com/t/thekindecommunity/shared_invite/zt-1vyq8qilj-jFH5V27jfFnHk~BuBSU0ZA) or [Discord](https://discord.gg/KdkCXRNTFn) communities. </Aside> ## Core billing functionality in Kinde <details> <summary><strong>How do I choose the right Kinde billing pricing model for my SaaS customers?</strong></summary> Think about how your customers actually use your product and what they value most. If you're selling a tool where usage varies dramatically - like API calls or storage - go with usage-based pricing so customers only pay for what they consume. For products where value comes from access to features rather than consumption, subscription pricing makes more sense. Kinde lets you mix these models within a single plan, so you could have a $20 base subscription plus $0.10 per extra API call. Start simple with one model and add complexity as you grow - your customers will thank you for not overwhelming them upfront. [Explore pricing models](/billing/pricing/pricing-models/) | [About billing concepts](/billing/about-billing/billing-concepts-terms/) </details> <details> <summary><strong>What's the difference between Kinde's metered and unmetered features in plans?</strong></summary> Metered features are the ones you can put a number on - monthly active users, API calls, storage gigabytes, support hours. These can be chargeable (customers pay per unit) or non-chargeable (included in their plan up to a limit). Unmetered features are more like switches - either customers have access to your advanced analytics dashboard or they don't. Think of metered features as "how much" and unmetered as "yes or no." Most SaaS businesses use a mix of both to create clear upgrade paths without making pricing too complicated. [About plans and features](/billing/manage-plans/about-plans/) | [Billing concepts guide](/billing/about-billing/billing-concepts-terms/) </details> <details> <summary><strong>How do Kinde plan groups help me organize billing for different customer types?</strong></summary> Plan groups are how you separate B2B and B2C offerings without creating a mess. Each group is tied to either individual users or organizations, never both. So you might have a "Professional" group with individual plans for freelancers and consultants, and a separate "Enterprise" group with team-based pricing for companies. You can create multiple pricing tables from one group, but each table can only show plans from a single group. This keeps your offerings clean and makes it easier for customers to find the right fit. [Plan groups management](/billing/manage-plans/about-plans/) | [Billing concepts](/billing/about-billing/billing-concepts-terms/) </details> <details> <summary><strong>Why should I use Kinde's billing features instead of building my own payment system?</strong></summary> Unless you're excited about spending months building subscription management, dunning logic, proration calculations, and tax compliance - spoiler alert: you're probably not - Kinde's billing saves you from that headache. We handle the messy bits like Stripe integration, plan upgrades, usage tracking, and invoice generation, so you can focus on building features your customers actually care about. Plus, you get a self-serve portal out of the box, which means fewer support tickets about billing issues. [About billing plans](/billing/manage-plans/about-plans/) | [Self-serve portal setup](/build/self-service-portal/self-serve-portal-for-orgs/) </details> <details> <summary><strong>How does Kinde handle the technical complexity of subscription billing?</strong></summary> We abstract away the most technical parts. Once you connect to Stripe (we create a new account for you automatically), everything syncs seamlessly. Plan changes, usage tracking, proration, invoice generation - it all happens behind the scenes. Your customers get a smooth experience upgrading or downgrading, and you can set up webhook notifications when important billing events happen. The only thing you need to worry about is building great features and deciding how to price them. [Stripe integration guide](/billing/get-started/connect-to-stripe/) | [About billing plans](/billing/manage-plans/about-plans/) </details> <details> <summary><strong>What happens when I publish a plan versus keeping it in draft, in Kinde?</strong></summary> Draft plans are your work in progress - you can tweak pricing, add features, change everything without affecting anyone. Once you publish a plan, it syncs to Stripe and becomes available for actual customers to subscribe to. Here's the catch: once someone subscribes to a published plan, you can't change it anymore, only version it (though plan versioning isn't available yet). This protects your existing customers from surprise pricing changes, but it means you need to think things through before hitting publish. [About plans lifecycle](/billing/manage-plans/about-plans/) | [Billing concepts](/billing/about-billing/billing-concepts-terms/) </details> ## Stripe integration <details> <summary><strong>Why does Kinde create a new Stripe account instead of connecting to my existing one?</strong></summary> This is actually a Stripe requirement for third-party integrations like ours, not something we chose. They want to ensure security and compliance by controlling how connected accounts are set up. The good news? You can transfer your existing business information during the Stripe onboarding process, so you're not starting from scratch. We're working on a migration strategy to make this smoother, but for now, the new account approach keeps everyone secure and compliant. [Stripe connection setup](/billing/get-started/connect-to-stripe/) | [Manage Stripe connection](/billing/payment-management/manage-stripe-connection/) </details> <details> <summary><strong>What should I tell customers when my Kinde–Stripe connection shows "In progress" status?</strong></summary> Don't worry - this just means Stripe needs a bit more information from you to complete the setup. Usually it's business details like contact information, tax info, or identity verification (they might ask for ID upload). The connection won't work for live payments until this is sorted, so customers won't be able to subscribe to paid plans yet. Jump into your Stripe dashboard through the "Update Stripe information" button in Kinde to see what's missing. Once everything's complete, the status should change to "Connected" and you're good to go. [Stripe connection troubleshooting](/billing/payment-management/manage-stripe-connection/) | [Connect to Stripe guide](/billing/get-started/connect-to-stripe/) </details> <details> <summary><strong>How do I test Kinde billing without charging real money?</strong></summary> Switch to your non-production environment in Kinde - this automatically creates a test Stripe account that won't process real payments. You can create plans, test the whole customer journey, even simulate failed payments, all without touching real credit cards. This is perfect for making sure your billing flow works before going live. Just remember to switch back to your production environment when you're ready to accept real payments. [Stripe integration setup](/billing/get-started/connect-to-stripe/) | [About billing plans](/billing/manage-plans/about-plans/) </details> ## Plan management <details> <summary><strong>How should I structure Kinde billing plans to make upgrading feel natural for customers?</strong></summary> Create a clear progression where each plan builds on the previous one. Start with a generous free plan that gives users real value, then add features and remove limits as they upgrade. Instead of completely different feature sets, use metered features to give everyone a "taste" - maybe 100 API calls on Free, 1,000 on Pro, unlimited on Enterprise. This way upgrades feel like growth, not switching to something completely different. Keep plan names simple and descriptive - "Starter," "Professional," "Enterprise" beats "Bronze," "Silver," "Gold" every time. [About pricing models](/billing/pricing/pricing-models/) | [Plan management guide](/billing/manage-plans/about-plans/) </details> <details> <summary><strong>What's the best way to handle Kinde plan features that some customers need but others don't?</strong></summary> This is where unmetered features shine. Instead of cramming every possible feature into every plan, gate advanced capabilities behind higher tiers. Use unmetered features as "gates" - advanced reporting might only be available on Business plans, while API access could be Professional and up. For features with variable usage, use metered features with different limits per plan. This way customers self-select into the right plan based on what they actually need, and you avoid feature bloat in your lower tiers. [Feature planning strategy](/billing/manage-plans/about-plans/) | [Billing concepts](/billing/about-billing/billing-concepts-terms/) </details> <details> <summary><strong>How do I explain Kinde's tiered pricing to customers who are confused about usage charges?</strong></summary> Be upfront about how the math works and give concrete examples. If you charge $0.50 for the first 10 API calls, then $0.30 for calls 11-50, show them: "If you make 25 API calls, you pay $5 for the first 10, then $4.50 for the next 15 = $9.50 total." Most customers appreciate transparency over surprises. Consider setting reasonable limits on lower plans instead of unlimited usage-based charging - it makes budgeting easier for them and upgrade paths clearer for you. Mke sure your pricing table is descriptive and clear about metered or package prices. This can be tricky. [Pricing models explained](/billing/pricing/pricing-models/) | [Build a pricing table](/billing/billing-user-experience/plan-selection/) </details> <details> <summary><strong>What should I consider when setting Kinde plan upgrade and downgrade policies?</strong></summary> Think about what's fair for both you and your customers. By default, Kinde forgives unpaid usage when customers downgrade and doesn't refund unused subscription days - this is pretty industry standard and avoids messy proration calculations. But you can change these policies if needed. For example, if someone on your $100/month plan cancels mid-month, you might choose not to refund the remaining days but also not charge them for any metered usage that month. Find the balance that feels fair and stick with it consistently. [Plan policies configuration](/billing/manage-plans/upgrade-downgrade-plans/) | [Billing setup guide](/billing/get-started/connect-to-stripe/) </details> ## User experience <details> <summary><strong>How do I create Kinde pricing tables that actually convert visitors into customers?</strong></summary> Less is more when it comes to pricing tables. Stick to your 3-4 core plans (Free, Pro, Business works great), highlight which plan is most popular, and focus on benefits rather than features. Use the custom features section to highlight your best selling points for each plan, and don't just copy your technical feature list. Test different approaches, but remember - confused customers don't buy anything. If your product is complex or has a lot of features, you might want to create a custom designed table. [Build effective pricing tables](/billing/billing-user-experience/plan-selection/) | [Pricing table customization](/billing/billing-user-experience/plan-selection/) </details> <details> <summary><strong>Should I show Kinde pricing tables during the signup flow or after users experience my product?</strong></summary> Depends on your product and customer type. For simple tools where the value is obvious upfront, showing pricing during signup can work well - especially if you have a generous free tier. For complex products where users need to understand the value first, let them sign up and experience your product before presenting upgrade options. You can control this in Kinde by toggling the "Show pricing table when customers sign up" option. Test both approaches if you're unsure - the data will tell you what works for your audience. [Pricing table display options](/billing/billing-user-experience/pricing-table-display/) | [Billing integration guide](/billing/billing-user-experience/plan-selection/) </details> <details> <summary><strong>How do I handle customers who need custom pricing that doesn't fit Kinde's standard plans?</strong></summary> Start by trying to fit them into your existing plans with some creative metered feature limits - you'd be surprised how often this works. If they truly need something custom, you can manually adjust metered usage for specific customers through the Kinde API after they subscribe. For true enterprise deals with annual contracts or bank transfers, those arrangements are available but you'll need to work with Kinde's enterprise team. Most customers who think they need custom pricing actually just need a slightly modified version of your top tier. [API billing management](/billing/manage-plans/about-plans/) | [Enterprise billing options](/manage-your-account/profile-and-plan/change-kinde-plan/) </details> ## Self-serve portal <details> <summary><strong>How does Kinde's self-serve portal reduce my customer support workload?</strong></summary> Think of it as your billing support team that never sleeps. Customers can update their payment details, view billing history, upgrade plans, and manage organization settings without creating support tickets. You control exactly what they can self-manage - maybe you want them handling payment updates but prefer to manage plan changes yourself. The portal generates one-time secure links, so you can add "Manage Billing" buttons throughout your app that take users directly to the right section. Less support tickets means more time building features that matter. [Self-serve portal setup](/build/self-service-portal/self-serve-portal-for-orgs/) | [Portal configuration options](/build/self-service-portal/self-serve-portal-for-orgs/) </details> <details> <summary><strong>What permissions should I give organization members via Kinde's self-serve portal feature?</strong></summary> It's better to start with more restrictions and expand, than start with too many that you might have to remove. Most organizations want their admins to manage payment details and view billing history, but you might not want every team member changing subscription plans. Kinde provides some pre-defined roles with varying portal access - so that the right people can change the right things. The permissions map directly to Kinde's system permissions like `org:write:billing`, so you can be granular about who can do what. [Portal permissions setup](/build/self-service-portal/self-serve-portal-for-orgs/). </details> <details> <summary><strong>How do I generate Kinde self-serve portal links for use in my app?</strong></summary> You've got two options depending on your setup. If you're using Kinde for authentication, use the SDK to generate portal links on the fly - perfect for "Account Settings" buttons in your app. If you're handling auth yourself or need server-side generation, hit the Kinde Management API with an M2M token. You can specify which section of the portal to open (billing, profile, etc.) and where to redirect users when they're done. The links are one-time use for security, so generate them fresh each time. [Portal link generation](/build/self-service-portal/self-serve-portal-for-orgs/) | [Management API integration](/build/self-service-portal/self-serve-portal-for-orgs/) </details> ## Integration and development <details> <summary><strong>How do I sync Kinde billing data with my application's feature access controls?</strong></summary> Use the Account API to check what features and usage limits a signed-in user has access to. The API returns billing entitlements along with roles and permissions, so you can gate features based on their current plan. For organization-level billing data (which is more sensitive), use the Management API instead. Set up webhooks for billing events like plan changes or usage updates, so your app stays in sync automatically. Don't try to cache billing data for too long - things change, and you want accurate limits. [Account API for billing](/developer-tools/account-api/about-account-api/) | [Billing webhooks](/integrate/webhooks/about-webhooks/) </details> <details> <summary><strong>How should I handle Kinde billing webhook events in my application?</strong></summary> Set up dedicated API endpoints to receive billing webhooks and verify the JWT signatures - this is how you know the requests actually come from Kinde. Handle key events like subscription changes, payment failures, and usage updates to keep your app in sync. Always respond with a 200 status code when you successfully process a webhook, or Kinde will keep retrying with backoff logic. Use the webhook request ID as an idempotency key to avoid processing the same event twice if there are retries. [Webhook implementation](/integrate/webhooks/about-webhooks/) | [Webhook setup guide](/integrate/webhooks/add-manage-webhooks/) </details> <details> <summary><strong>How do I implement Kinde billing URLs and parameters for seamless user experiences?</strong></summary> Use URL parameters to direct customers to specific plans or pricing tables when they're ready to upgrade. For example, `?plan=pro_monthly` can take them straight to your Pro plan signup. This is super useful for email campaigns, in-app upgrade prompts, or landing pages. You can also override which pricing table displays using parameters, so different marketing campaigns can show different plan combinations. The SDK handles most of this automatically, but manual URL construction gives you more control. [Billing URL integration](/billing/billing-user-experience/plan-selection/) | [Pricing table configuration](/billing/billing-user-experience/plan-selection/) </details> ## Troubleshooting and support <details> <summary><strong>Why aren't the plan prices I set up in Kinde syncing with Stripe?</strong></summary> If you see "price not synced" status, it usually means the plan isn't published yet - only published plans sync to Stripe. Mixed sync status (some features synced, others not) typically happens when some features are already in a published plan while others are new additions. Try publishing or re-publishing the plan to trigger a sync. If it's still not working, check that your Stripe connection status shows "Connected" rather than "In progress" or "Connecting." [Plan publishing process](/billing/manage-plans/about-plans/) | [Stripe connection status](/billing/payment-management/manage-stripe-connection/) </details> <details> <summary><strong>What should I do when customers report billing discrepancies?</strong></summary> Start by checking the billing history in their organization's portal - this shows exactly what they were charged and when. Look for things like mid-month plan changes (which can cause proration), metered usage overages, or failed payment retries. Most "billing errors" are actually just confusing timing - customers might see charges for last month's usage appearing on this month's invoice. If you genuinely find an error, Kinde's support team can help resolve it, but having the billing details handy speeds things up. [Billing history access](/manage-your-account/profile-and-plan/view-kinde-plan/) | [Support resources](/build/self-service-portal/self-serve-portal-for-orgs/) </details> <details> <summary><strong>What are some of Kinde's billing limitations and when might these be fixed?</strong></summary> Currently, Kinde only supports monthly billing (no annual), doesn't have free trial periods built-in, and plan versioning isn't ready yet. For customers who need annual billing, you could manually create annual plans with different pricing. For free trials, you could start them on a free plan and set up automated emails to encourage upgrades. Give us feedback about your billing experience with Kinde by reporting bugs and making feature suggestions. We genuinely are listening. [Current billing limitations](/billing/manage-plans/about-plans/) | [Alternative approaches](/billing/pricing/pricing-models/) </details> ## Best practices <details> <summary><strong>What's the smartest way to launch Kinde billing for an existing SaaS product with users?</strong></summary> Start by setting up your billing plans and pricing tables in a non-production environment to get everything perfect. Create a grandfathering strategy for existing users - maybe they keep their current access levels for a certain period before needing to choose a plan. When you're ready to go live, communicate the changes clearly with plenty of notice. Consider starting with just new signups on the new billing system, then migrating existing users in batches. This gives you time to iron out any issues without affecting your entire user base at once. [Billing setup strategy](/billing/get-started/connect-to-stripe/) | [Plan management](/billing/manage-plans/about-plans/) </details> <details> <summary><strong>How should I price Kinde metered features to encourage growth while staying profitable?</strong></summary> Pricing decisions can be really hard. Start with generous free tiers that let customers experience real value, then use usage limits to create natural upgrade triggers. If your app gets more valuable with heavier usage, price metered features aggressively low or even free up to reasonable limits. The goal is to make customers successful enough that upgrading feels like a no-brainer rather than a burden. Watch your unit economics closely - some features cost you more to provide than others, so price accordingly. [Metered pricing strategies](/billing/pricing/pricing-models/) | [Feature management](/billing/manage-plans/about-plans/) </details> <details> <summary><strong>What's the most effective way to use Kinde billing data to reduce customer churn?</strong></summary> Set up webhooks for payment failures and usage pattern changes, then create automated workflows to reach out before customers hit walls. If someone's approaching their usage limits, send them upgrade prompts with specific benefits rather than just warnings. Use billing data to identify your best customers (high usage, consistent payments) and make sure they're getting white-glove treatment. Failed payments aren't always churn signals - sometimes cards expire or customers need payment method updates. [Billing webhooks setup](/integrate/webhooks/about-webhooks/) | [Usage tracking](/billing/manage-plans/about-plans/) </details> <details> <summary><strong>How do I structure Kinde plans to minimize customer confusion while maximizing revenue?</strong></summary> Keep it simple with clear value differences between tiers. Three to four plans usually hit the sweet spot - more than that and customers get paralyzed by choice. Use the "good, better, best" psychology: make your middle plan the obvious choice by giving it the best value ratio. Include some metered features as "freebies" in higher plans to justify the price jump. And please, test your pricing table with real humans before launching - what seems obvious to you might be confusing to customers who see it fresh. [Pricing table best practices](/billing/billing-user-experience/plan-selection/) | [Plan strategy guide](/billing/pricing/pricing-models/) </details>

# Billing - About billing - The Kinde billing model

> Detailed explanation of the Kinde billing model including Stripe integration, B2B/B2C support, multi-currency, and billing cycles.

Kinde billing model, Stripe integration, B2B, B2C, B2B2C, multi-currency, billing cycles, payment processing
billing

In the Kinde model, we handle everything except the payment processing part of billing. Kinde integrates with a third-party payment processor (Stripe) for secure payment processing. This involves a continuous sync between Kinde and Stripe, to ensure that products, prices, subscription information, invoices and payments, are accurate in both systems. Kinde does not store payment details, such as credit card information. This is exclusively managed by Stripe. ## Billing for B2B, B2C and B2B2C Kinde supports billing models for B2B, B2C and even B2B2C. Depending which you are setting up, you may need to do a few different tasks. Most of the setup is common, but we will call out tasks that are only relevant to one or the other. - B2B - customers are companies, organizations, or groups. - B2C - customers are individual users. - B2B2C - the platform model, where you have a customer who is an organization, and then users who are customers of that organization. ## Kinde and Stripe Kinde integrates a single payment processor (only Stripe Billing for now) to handle the financial and payment management side of things. Stripe uses the plan data and the customer info to create an agreement in Stripe. The customer is invoiced based on this agreement. Stripe securely stores your customer’s payment details and Kinde never sees credit card or other bank information. Here’s what the billing feature looks like as a workflow. ![Plan purchase workflow](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/b9a7bc9a-8f32-4a6d-fe4c-799db02c1600/public) Stripe is currently the only payment provider supported with Kinde. But we plan to expand to other providers in the near future. ## Multi-currency support Kinde has customers everywhere and almost every global currency is supported. ## Transaction data and Stripe region - When you connect your Stripe account to Kinde, you connect to our Stripe US account. We do this because Stripe US more widely supports global functionality. - Regardless of your own Stripe account region, you can still select any currency for your plans in Kinde, and Stripe will do the hard part of exchange rate conversion, tax calculations, etc. - Any fees you incur in Stripe for international transactions are your sole responsibility. ## Billing and invoice cycles By default, Kinde uses the following billing behavior, though some aspects can be customized depending on how you configure cancellations. - Billing cycles are monthly, based on the customer's original sign-up date. - Fixed charges (e.g. monthly subscription fees) are billed in advance, customers pay at the start of their billing period. - Metered (usage-based) charges are billed in arrears, usage is tracked throughout the billing period, and charges appear on the next invoice. You can also [set policies](/billing/get-started/setup-overview/) to control what happens when a customer cancels or changes their plan.

# Billing - Billing user experience - Update code and URLs for billing

> Guide to integrating billing into your application using URL parameters, React SDK components, and authentication flows.

billing integration, URL parameters, React SDK, plan selection, pricing table, org signup, B2B
billing

This topic explains how to customize billing flows with Kinde, including URL parameters, direct auth URLs, and SDK usage in React. Examples are given in React, but can be adapted for most frameworks. ## Edit the auth URL parameters directly Here’s a standard Kinde auth URL: ``` https://<your_kinde_subdomain>.kinde.com/oauth2/auth ?response_type=code &client_id=<your_kinde_client_id> &redirect_uri=<your_app_redirect_url> &scope=openid%20profile%20email &state=abc ``` Add these parameters as needed: | Parameter | Description | | --- | --- | | `plan_interest` | Pre-selects a plan (skips plan selection) | | `pricing_table_key` | Displays a specific pricing table | | `is_create_org` | Triggers org sign-up flow | ### Examples - Pre-select a plan: ``` ...&plan_interest=pro_monthly ``` - Show specific pricing: ``` ...&pricing_table_key=spring_promo ``` - Org sign-up: ``` ...&is_create_org=true ``` ## Integrate billing using the React SDK You can avoid manual URL construction by using our SDK components. Here's how. **User sign-up (default):** ```jsx <RegisterLink>Sign up</RegisterLink> ``` **Org sign-up (B2B):** ```jsx <RegisterLink isCreateOrg>Sign up your organization</RegisterLink> ``` **Pre-select a user plan:** ```jsx <RegisterLink planInterest="pro_monthly">Sign up with Pro plan</RegisterLink> ``` **Show a specific pricing table:** ```jsx <RegisterLink pricingTableKey="spring_promo">Spring Promo Sign up</RegisterLink> ``` **Combine for B2B + pricing table:** ```jsx <RegisterLink isCreateOrg pricingTableKey="enterprise_2024"> Sign up your company </RegisterLink> ```

# Billing - Billing user experience - Customize the plan sign-up experience

> Guide to customizing the plan sign-up experience including three different approaches and billing screen customization options.

plan sign-up, billing customization, plan selection, payment flow, billing screens, HTML CSS customization
billing

There are three ways you can allow customers to sign up to a plan. ## Option 1: Use your own plan selection screen Display a plan selection screen in your own app or website. Once the user selects a plan, redirect them to Kinde to complete the payment flow. To pre-select a plan, pass the `plan_interest` query parameter in the Kinde authentication URL. ## Option 2: Use Kinde’s built-in plan selection Let Kinde handle plan selection as part of the authentication flow. To enable this: - [Create a pricing table](/billing/billing-user-experience/plan-selection/) in Kinde - [Add and publish plans](/billing/manage-plans/create-plans/) - Set the table to **Live** Once this is done, use the relevant pricing table key in the authentcation URL and Kinde will display the plan selection screen during signup. ## Option 3: Assign a plan via the Kinde Management API Use the [Kinde Management API](https://docs.kinde.com/kinde-apis/management/#tag/billing-agreements/get/api/v1/billing/agreements) to assign a customer to a specific plan. The next time the customer signs in, Kinde will automatically prompt them for payment details. This is ideal for: - Migrating customers from another system - Assigning a plan without user input ## Customize billing screens in the authentication flow Depending on how you choose to onboard customers, users will see three different billing screens during the authentication flow. These screens can be customized: 1. **Plan selection** - Displayed when a user signs up for the first time and multiple plans are available. 2. **Payment details** - Shown after a user selects a plan—or if a plan was pre-selected before redirecting to Kinde. 3. **Success** - Shown when sign up and payment are successfully completed. By default, all screens will inherit branding and styling from the global Kinde [Design](/design/brand/global-brand-defaults/) settings. If you want more control, you can [fully customize these screens using your own **HTML, CSS, and JavaScript**](/design/customize-with-code/customize-with-css-html/).

# Billing - Billing user experience - Build a pricing table

> Comprehensive guide to building pricing tables in Kinde including plan selection, customization, multi-language support, and integration options.

pricing table, plan selection, plan groups, multi-language, plan highlighting, plan ordering, live pricing
billing

You can build pricing tables to enable your customers to select plans and go through a payment flow as part of signing up to your app or site. Kinde's pricing table builder can generate a pricing table from published plans, or you can start with a blank one. You can also add and edit information and content in your preferred languages. You can create as many pricing tables as you want. ![parts of a pricing table](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/c911b0af-5c1d-44f8-970b-47c0084ad500/public) ## Create a pricing table A pricing table can only have 4 plans. 1. Go to **Billing > Pricing tables**. 2. Select **Add pricing table**. 3. Choose an option: 1. **Generate** a pricing table from a [plan group](/billing/manage-plans/add-manage-plan-groups/) - this pre-populates the pricing table with basic details and the plans based on the plan group you select. Up to 4 plans can be included on a pricing table. If your plan group contains more, you may want to create a new pricing table. 2. **Create new** pricing table. Manually build the pricing table and add plans from a plan group. This gives you a blank slate to start in. 4. Select **Next**. 1. **Generated** - select the group and then **Save**. 2. **New** - complete the details in the window and **Save**. ## Edit the pricing table You can edit a pricing table, but they are not versioned. Whatever content you override, it cannot be reverted or recovered. You cannot edit a plan price. This is inherited from the plan itself. ## Change what plans show on a pricing table You can add and remove plans from the pricing table when it is being worked on. 1. Open the pricing table. 2. Scroll to the **Plans** section. 3. To remove a plan: 1. Select the three dots on the plan card and select **Remove from pricing table**. 2. Confirm you want to remove the plan. This removes all custom content you have added, in all languages you have added content in, on the pricing table. The plan is removed. 3. Select **Save**. 4. To add a plan, select **Add plan**. 1. In the window that opens, select an available plan. Only plans from the same plan group are shown. 2. Complete the details in the window for this plan. At minimum, you must enter a **Display name** and the **CTA button** content. This will be displayed in the pricing table. 3. Select **Save**. The plan is added to the pricing table. ## Change the order of plans on a pricing table 1. Open the pricing table. 2. Scroll to the **Plans** section. 3. Select the three dots menu on the plan you want to move. 4. Select **Move up** or **Move down**, depending on the plan position. 5. Select **Save**. This is the order plans will be displayed left to right on the pricing table. ## Add a features list to a plan on the pricing table To promote the top features in a plan, add them manually to the pricing table. These features don't need to correspond exactly to your plan configuration, this is an opportunity to sell the most appealing product features and make plan choices easy for customers. 1. Open the pricing table. 2. Scroll to the **Plans** section. 3. Select the three dots menu on the plan and select **Edit content**. 4. In the top of the window, select the language you want to add features in. 5. Add a **Features list heading**. This sits directly above the list. 6. Add a list of features in the large text **Features list** field. Features will appear in the order they are listed. 7. Select **Save**. ## Highlight a plan on a pricing table It’s common to want to call out or highlight something about a plan on the pricing table, for example, to highlight which plan is most popular. 1. Open the pricing table. 2. Scroll to the **Plans** section. 3. Select the three dots menu on the plan and select **Edit content.** 4. In the top of the window, select the language you want to add highlight content. 5. Add a **Highlight label** and select **Save**. ## Edit and translate pricing table content If you want to display pricing tables in multiple languages, you can change add content translations to the plans on the pricing table. 1. Open the pricing table. 2. Scroll to the **Plans** section. 3. Select the three dots menu on the plan and select **Edit content.** 4. In the top of the window, select the language you want to add or edit content for. ![image.png](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/58587ad1-0077-47d7-faca-ea3dd6345d00/public) 5. Enter or edit all the content you want in the chosen language. 6. Select **Save**. ## Make the pricing table live to customers We recommend only doing this after your plans are finalized and published. 1. Open the pricing table. 2. Select **Make live**. 3. Select **Save**. If a user passes the pricing table code in a URL, they will be able to sign up using it. Here's how to [add the pricing table params to URLs](/billing/billing-user-experience/add-billing-to-url-sdk/). ## Set pricing table to show as default in register flow You can set a pricing table to show by default, even if the code key is not passed in the URL during the normal sign up flow. 1. Open the pricing table. 2. Select **Show by default**. 3. Select **Save**. If a user goes through the registration flow without a pricing table code key in the URL, this is the pricing table they will see. ## Switch the pricing table off for the register flow You can configure Kinde to hide pricing tables in the sign up flow, but still show them in the self-serve portal. You'd do this if you have designed your own pricing pages and you only want to show Kinde's pricing table for the self-serve upgrade or downgrade experience. 1. Go to **Settings > Environment > Billing**. 2. Switch off the **Show the pricing table when customers sign up** option. 3. Select **Save**. ## Add plan selector to registration URL Use your SDK or manually change URL params to incorporate billing. See [Add billing to URl or SDK](/billing/billing-user-experience/add-billing-to-url-sdk/)

# Billing - Billing user experience - Pricing table display defaults

> Guide to understanding pricing table display defaults for B2C, B2B, and B2B2C models including when pricing tables are shown.

pricing table display, B2C, B2B, B2B2C, plan groups, default display, URL parameters
billing

The pricing table that is displayed in a particular flow depends on the the [default plan groups and pricing table order](/billing/manage-plans/add-manage-plan-groups/). ## B2C (User-based) A pricing table is shown when: - A new user registers - An existing user, marked as a billing customer, signs in but isn’t on a plan yet ## B2B (Org-based) A pricing table is shown when: - A new organization registers (`is_create_org` parameter) - An org member with `org:write:billing` permission signs in and the org is a billing customer but not on a plan yet ## B2B2C (Platforms - uses both) - Organization plan selection = B2B logic - User plan selection = B2C logic ## Here's a video showing the user experience for billing <YoutubeVideo videoId="xxVwZW8OxIA" videoTitle="Billing user experience"/> ## Override the default plan display You can override which plan or pricing table is shown using URL parameters. See: [Update code and URLs for billing](/billing/billing-user-experience/add-billing-to-url-sdk/). ## Summary of display for plan groups | Model | Plan group | Pricing table is shown when | | --- | --- | --- | | B2C | User plan group | New user registers / logs in | | B2B | Org plan group | New org registers / billing admin | | B2B2C | Both | Depends on flow context |

# Billing - Get started - Step 1 Add billing role (B2B)

> Guide to creating a billing role for B2B organizations including permissions setup and role assignment for billing management.

billing role, B2B, organization billing, billing admin, permissions, org:write:billing
billing

Skip this step if you sell your services to individuals (B2C). If you are a B2B business, your customers in Kinde are referred to as organizations. These can be created: * via API * manually in the Kinde admin area * via the auth flow if you have enabled the relevant settings and pass `is_create_org` as a query parameter in the authentication URL. In order to manage billing for the organization, create a default billing role (with relevant permissions) to assign to a user in the organization. 1. Go to **Settings > Roles** and select **Add role**. The **Add role** window opens. ![Roles screen for billing owner](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/96415552-a11b-4be3-e644-d9eaa2af6700/public) 2. Name the role, for example, `Billing Admin` , and enter a description and **Key**. 3. If you allow organizations to self-sign up, select the **Assign to the creator** option. 4. In the **System permissions** section, ensure the **org:write:billing** system permission is selected. 5. Select **Save**. ## Assigning the role If you have configured Kinde to allow organizations to self-sign up, and selected to apply this role to the "Creator", then this role will now be automatically assigned to users who create an organization as part of the authentication flow. Alternatively, you can assign the billing admin role to organization members via API or in the Kinde dashboard. You can add the permissions to any of your custom roles and mix and match the system permissions to work for your needs. **Next:** [Step 2 Connect to Stripe and set policies](/billing/get-started/connect-to-stripe/)

# Billing - Get started - Step 6 Create pricing table (optional)

> Guide to creating pricing tables in Kinde for plan selection during registration and self-serve portal plan changes.

pricing table, plan selection, registration flow, self-serve portal, plan upgrade, plan downgrade
billing

Kinde lets you create pricing tables based on your plans. The tables can be integrated into the auth flow so that plan selection becomes part of registration. It might look something like this. ![pricing table example](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/8514b968-262d-4aec-24bd-02070669e300/public) Pricing tables are also used in the plan upgrade and downgrade flows available in the self-serve portal. So when a customer changes their plan, the pricing table appears for them to select the new plan option. To create your own, go to [Build a pricing table](/billing/billing-user-experience/plan-selection/). If you have your own screen flows for plan display and selection, you do not have to use Kinde’s pricing tables. **Next:** [Step 7 Set up the self-serve portal (optional)](/billing/get-started/self-serve-portal-setup/)

# Billing - Get started - Step 4 Build plans

> Guide to developing a plan strategy and building plans in Kinde including B2B/B2C considerations, feature planning, and pricing models.

plan strategy, B2B, B2C, B2B2C, plan features, pricing models, plan limits, feature planning
billing

Whether you currently charge for services or are just starting out, building plans is the more complex part of the billing setup process. We recommend you define a strategy before adding plans in Kinde. - [Learn more about how plans work in Kinde](/billing/manage-plans/about-plans/) - [Skip to creating plans](/billing/manage-plans/create-plans) ## Develop a plan strategy If you have not created plans before, here’s a list of tasks to help you prepare. These will give you a strategy for creating the plans you need in Kinde. 1. Are you creating B2B or B2C or B2B2C plans? B2B plan types are for business customers (organizations), B2C plan types are for individual users, B2B2C is a platform model, where you have a customer who is an organization, and then users who are customers of that organization. 2. Decide how many plans you want and the name of each plan. E.g. `Free, Pro, Plus` or `Solo, Team, Enterprise`. 3. Make a list of each [plan’s features](/billing/manage-plans/create-plans). For each feature, decide on: - the [pricing model](/billing/pricing/pricing-models/) that applies - limits and inclusions for a feature Anything you ‘gate’ access to, or put limits on in your product, should be on this list. Tip: Create a spreadsheet to keep track of everything. ![example spreadsheet for plan planning](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/401ff633-c6c8-45ba-9502-1a29274b4400/public) 4. Identify which features are common across plans. You don’t need to add a new feature every time, you can [re-use features](/billing/manage-plans/about-plans/) across plans and change the details. **See [Create plans](/billing/manage-plans/create-plans)** for step-by-step instructions.

# Billing - Get started - Step 2 Connect to Stripe and set policies

> Step-by-step guide to connecting Kinde to Stripe for payment processing and setting up billing policies for cancellations and plan changes.

Stripe connection, payment processing, billing policies, cancellation policies, plan changes, onboarding
billing

Kinde’s billing feature comes with a dependency on [Stripe](https://stripe.com), which is a globally known and reliable payments processing platform. A new Stripe account is automatically created for you when you set up billing in Kinde. <Aside type="warning"> You can’t currently connect your existing Stripe account, but you will be able to copy across your business information from your existing account to the new account. This is a Stripe-imposed limitation for third party integrations. We’re working on a migration strategy. </Aside> ## Watch a quick video about how to connect to Stripe <YoutubeVideo videoId="-TgYfXe2qrs" /> ## Connect to Stripe 1. If you are testing billing, switch to your non-production environment. This will automatically trigger the use of a test Stripe account as well. 2. Go to **Settings > Environment > Billing**. 3. Select **Connect Stripe account**. Kinde initiates the connection and adds the connection card. ![Stripe card connection in Kinde](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/f3797997-6681-41c8-a297-4a962d5d0500/public) 4. Select **Update Stripe information**. This kicks off a Stripe onboarding flow. You will see a Stripe-generated screen to enter details. ![Kinde Stripe onboarding flow start screen](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/71b08393-f43d-4f91-3268-7501e08d3f00/public) <Aside> If the Stripe flow doesn’t appear and you remain in the Kinde dashboard, select **Update Stripe information.** </Aside> 5. Enter the email that will be associated with the Stripe account and select **Submit**. Here’s what happens next, depending if you have a Stripe account already associated with your email address. 1. **If you are in the test environment**, you’ll be prompted through a flow. You can continue or select **Return to Kinde**. 2. **If you are in a production environment,** you will be asked if you want to use details from an existing Stripe account or make a new one: 1. If you select existing, account details from the existing account will be used, but no other data will come across. 2. If you select to make a new one, you will be prompted to enter all your business details. This can take a while. 3. Follow the prompts as far as you want. Select **Return to Kinde**. <Aside> You can select **Return to Kinde** at any time. You do not have to set up the connection fully until you are ready to publish plans. Any time you want to complete the setup, select **Update Stripe information**. </Aside> 6. When you complete the Stripe onboarding, or opt out by selecting **Return to Kinde**, the connection card on the Kinde **Billing** page shows the connection status. ![Connection status on Kinde stripe card](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/f4eb395b-069e-42c3-ab4f-d78cc52e8800/public) - `Connecting` means Stripe is still sending information to Kinde about the account status. It should not take long to sync. - `In progress` indicates that Stripe has connected to Kinde, but still requires some additional details from you in order to fully set up the account. Select **Update Stripe information** to complete the Stripe onboarding. You need to do this before plans can be made available to your customers. - `Connected` means Stripe is successfully syncing data with Kinde and you’re ready to publish plans. ## Set billing policies for cancellation and plan changes After you have connected to Stripe, you can set policies to control what happens when a customer cancels or changes their plan. The policies are for deciding if you charge or forgive unpaid usage of metered features, or if you refund or retain unused, paid subscription days. 1. In the **Policies** section, choose the settings. 2. Select **Save**. **Next:** [Step 3 Set default billing currency](/billing/get-started/default-billing-currency/)

# Billing - Get started - Step 3 Set default billing currency

> Guide to setting the default billing currency for all Kinde plans including important considerations about currency selection.

default currency, billing currency, currency selection, multi-currency, Stripe transactions
billing

You need to set a default billing currency for all your Kinde plans, before you create them. This is the currency that purchase transactions will be processed in Stripe. The currency you select cannot be changed after your first plan is published. For now, the default billing currency will be used in all plans and plan groups you create. <Aside> If you have already created a plan and assigned a default currency that way, you may not need to change anything here. </Aside> 1. Go to **Settings > Environment > Billing**. 2. Select a default currency. 3. Select **Save**. Next: [Step 4 Build plans](/billing/get-started/build-plans/)

# Billing - Get started - Step 5 Publish plans

> Guide to publishing plans in Kinde including Stripe synchronization and best practices for testing before publication.

publish plans, Stripe sync, draft plans, published plans, plan testing
billing

When you publish a plan, all of the plan features and charges are synced to Stripe where they are transformed into products that users can buy. We recommend testing, reviewing, and making all changes before publishing plans. When you are ready, open the plan and select **Publish plan** in the top right of the plan window. Do this for each plan you want users to subscribe to. Learn more about [draft and published plans](/billing/manage-plans/about-plans/) **Next:** [Step 6 Create pricing tables](/billing/get-started/add-pricing-table/)

# Billing - Get started - Step 7 Set up self-serve portal (optional)

> Guide to setting up the self-serve portal for customers to manage their own plans, payment information, and account details.

self-serve portal, customer management, plan upgrades, plan downgrades, payment management, account management
billing

If you want your customers (organizations or individual users) to manage their own plans, including upgrades and downgrades, payment information, team members, etc., set up the self-service portal to allow this. Aside from account management, the self-serve portal is for orgs to self-manage teams and business information, and individuals to manage their user profile. - [Self-serve portal for orgs](/build/self-service-portal/self-serve-portal-for-orgs/) - [Self-serve portal for users](/build/self-service-portal/self-serve-portal-for-users/)

# Billing - Get started - Setup overview

> Step-by-step overview of the billing setup process including Stripe connection, plan creation, and self-serve portal configuration.

billing setup, Stripe connection, plan creation, self-serve portal, billing roles, pricing tables
billing

Billing is big step for a business, so it’s a good idea to review the process before you start. ## Overview of billing setup 1. [Set up billing roles and permissions (B2B)](/billing/get-started/add-billing-role/) 2. [Connect to Stripe and set billing policies](/billing/get-started/connect-to-stripe/) 3 [Set currency](/billing/get-started/default-billing-currency/) - you can’t change this once your first plan is published 4. [Build plans](/billing/manage-plans/create-plans/) 5. [Publish plans](/billing/get-started/publish-plans/) 6. Enable subscription self-serve (optional) 1. [Create a plan selector](/billing/billing-user-experience/plan-selection/) 2. [Enable self-serve portal](/build/self-service-portal/self-serve-portal-for-orgs/) 7. [Update your code and registration URLs](/billing/billing-user-experience/add-billing-to-url-sdk/) 8. Test the setup and get your first subscriber! ## ⚠️ Test in a non-production environment If you are using billing for the first time, make sure you use a Kinde non-production environment to test out the billing features. When you use a non-production environment, Stripe automatically creates a test Stripe environment. This test environment allows you to create customers and billing subscriptions without actually charging customers. You can also use Stripe’s test credit card details. When using a Kinde test environment and a test Stripe account, you will not incur any billing-related fees from Stripe or Kinde. ## Watch a video about creating and publishing plans, and building pricing tables <YoutubeVideo videoId="M3hX3JwhEY8" videoTitle="Manage plans, features, and pricing in Kinde"/> ## Tip: Before setting up billing - Make a list of all your app’s features - with names, descriptions, prices, metered rates, limits, inclusions, etc. You might consider doing this in a spreadsheet to make it easier and faster to add features in the Kinde plan builder. Include plan variations for prices, limits, etc. ![example of a spreadsheet of plans](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/401ff633-c6c8-45ba-9502-1a29274b4400/public) - (B2B) make sure your Kinde business is set up to [create an organization on sign up](https://docs.kinde.com/build/organizations/orgs-for-developers/#new-organization-self-sign-up). Follow the numbered steps in this section to set up billing in your business.

# Billing - Manage plans - About plans

> Comprehensive guide to understanding plans in Kinde including plan groups, features, pricing models, and plan lifecycle management.

plans, plan groups, features, pricing models, fixed charges, metered features, unmetered features, plan versioning
billing

Plans enable you to structure your app features and charge your customers for using your services. Kinde supports both basic and more advanced plans for SaaS services. Here’s some examples: - A simple subscription plan: $10 per month for x features - A more complex plan: $20 per month for x features, plus x amount per GB storage, plus MAU charges (up to x free per month). We recommend creating your basic or simplest plan first (e.g. your Free plan), then work through to more complex plans. ## Current limitations These are known limitations that we are actively working on to add. - Support for plan models with free trial periods. - Annual subscriptions. Only monthly is available right now. - No alterations to billing cycle or invoice methods. - Add-ons and discounts that can be applied to individual subscriptions. ## About plan groups Plan groups are a collection of related plans, tied to either users or organizations. - You can create as many plan groups as you need. - Each group can only contain plans for users OR plans for orgs. - You can create multiple pricing tables for one plan group (but only one is the default). - Only one plan group can be included in a pricing table. For more information see [add and manage plan groups](/billing/manage-plans/add-manage-plan-groups/) ## Parts of a plan There are a number of concepts and elements involved in building a plan. ### Plan profile This is the name of the plan, description, code key, etc. You need to enter these details and save them before you move on to adding charges and features. The plan name appears on the pricing table that you can generate to share with customers. We recommend keeping it short. Use the description fields to explain differences in plans for internal use. ### Plan feature pricing Depending how you manage plans and feature provisioning in your application, plan pricing might be simple or complex in your business. When you set up a plan, you can include a mixture of any of these options: - **Fixed charges** - a recurring charge that does not change and is invoiced in advance, e.g. a monthly subscription charge. - **Metered features** - usage-based entitlements that define what and how much users’ access, and what they pay to access it. These might be per unit, per tier, or non-chargeable. Such as included and additional MAU. - **Unmetered features** - things included in a plan that users don’t pay for separately. Unmetered features are generally used to gate feature access. E.g. X feature is not available on the Free plan, but is on a higher tier plan. ## Example plan features | Feature | Price | Pricing model | | ------------------- | ---------------------------- | ------------------------- | | Access to x feature | N/A | Unmetered | | Subscription | $ 20 / month for access | Fixed charge | | Interaction | $x per interaction | Metered / tiered | | Storage/Usage | $x per GB | Metered / units or tiered | | MAU | x included | Metered / non-chargeable | | MAU | Additional $x per MAU over n | Metered / tiered | A plan is complete when it includes all the features needed to provide the access and charge the right price. ## How to use and re-use features and charges Kinde structures plans so that they can share a pool of features and charges that you define at a high level. When you add the feature in a plan, you add the price, limits, and other differences uniquely in each plan. This makes building and managing plan features easier, because the feature shares the same key (e.g. `base_price`), making it easier to manage in your code and for gating. For example, you only need to define the item ‘Base price’ once, and then you define the price when you add it to each individual plan. Similarly, features that are inclusions, such as support hours included, just create one metered feature. Then set the limits of the feature differently for each plan level. E.g. Free plan one hour, Pro plan gets 2 hours, etc. ![Model of how you can use the same feature or charge across plans](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/190e7ba8-ba26-4fb6-57b4-a4d6b9fec700/public) ## Draft and published plans, and plan versioning Plans can be in two states: **Draft** - these plans are being developed and are not available for subscribers yet. **Published** - products and prices are synced to Stripe and the plan can be signed up to manually, or via API. - Once a plan has a subscriber, the plan cannot be changed, only versioned. - Published plans must be included in a pricing table for self-sign ups. Plan versioning is being worked on, but is not currently available. ## When a plan feature price syncs to Stripe Feature prices sync to Stripe when you are successfully connected to Strip and you publish the plan containing that feature. When you are creating a plan, you may notice that some features show `price synced` or `price not synced`. - Price synced - The price in Kinde and Stripe are the same. A plan with this feature is published. - Price not synced - The price in Kinde has not yet synced to Stripe. When you publish or re-publish the plan, this will change. If you see a mix of synced and not synced feature prices on a plan, this might be because the synced ones are in a plan that is published. Unmetered (non-chargeable) features do not have a price sync status badge.

# Billing - Manage plans - Add and manage plan groups

> Guide to creating and managing plan groups in Kinde including B2B/B2C organization, default groups, and plan ordering.

plan groups, B2B, B2C, B2B2C, default groups, plan organization, pricing tables
billing

Plan groups are a way of organizing sets of related plans together. A plan group can be defined as an 'organization' or 'user' type, depending who you are selling to. For (B2B) businesses, use the organization type. For (B2C) individual customers, use the 'user' type. If you are a B2B2C business, create one group of each type. How you set up plans in the group impacts how you present feature bundles on a pricing table. ## Default plan groups When you first add a plan in Kinde, you select the plan type and a plan group will be automatically created for you. You can later change the name of the group, or make a different group the default group. There can only be one default group for organizations and one for users. The default group is what is displayed by default on a pricing table. ## Add a plan group 1. Go to **Billing > Plans**. 2. Select **Add group**. 3. Enter a **Name** and select the type of plan the group contains. 4. Choose a colour. This only applies to how the group appears on the **Plans** page. 5. Select **Save**. 6. Repeat for all the groups you want to add. ## Organize plans within a group The order of plans within a group represents the order they are shown in the Kinde Admin. This does not impact the order they are shown on the pricing table. To move a plan up or down in a group, select the three dots menu and select a moving option: ![Plan card overflow menu](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/787e431f-c73c-44b4-b245-222f9a4cf200/public) ## Delete a plan group <Aside type="warning"> If you delete a plan group that is associated with a pricing table, the pricing table will also be deleted. These actions are not reversible. </Aside> 1. Go to **Billing > Plans**. 2. Select the three dots menu near the plan group name. ![Plan group overflow menu](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/1ba1256c-d3cf-4b80-e7b0-8422d3866100/public) 3. Select **Delete**. 4. In the confirmation window that appears, confirm you want to delete.

# Billing - Manage plans - Cancel a subscription

> Guide to canceling subscriptions including customer self-service cancellation and API-based cancellation methods.

cancel subscription, self-serve portal, API cancellation, agreement ID, billing role, cancellation workflow
billing

While we would rather customers didn't cancel their subscription to your services, they do need to be able to. There's two ways to do this. - The customer can cancel via the self-serve portal - You can cancel on behalf of a customer via API <Aside> There is not currently a way to cancel via the Kinde UI </Aside> ## How a customer can cancel their own plan Customers can only do this if you have enabled plan management in the [self-serve portal](/build/self-service-portal/self-serve-portal-for-orgs/) and the B2B customer has a [billing role](/billing/get-started/add-billing-role/) that allows them to make changes. 1. In your app or product, they open the self-serve portal for managing their account. Here's an example of where users (B2C) and organizations (B2B) can manage plans. ![Self-serve portal selector for managing plans](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/1f7c8192-418b-412e-1728-54affbfeed00/public) 2. On the **Plan** page, they can scroll to the bottom and select **Cancel plan**. 3. They follow the prompts to cancel. This information is synced to Stripe. Depending on the [billing policies](/billing/manage-plans/upgrade-downgrade-plans/) you have set, they might receive a bill for unpaid usage, or be credited for unused subscription days. ## Cancel a plan via API 1. Get the customer's Agreement ID. This is the unique ID associated with their subscription in Stripe. You can find it in their Kinde record under Billing. 2. Using a DELETE request, hit the delete/api/v1/billing/agreements endpoint and include the `agreement_id` value in the call. ![API cll to delete agreement](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/d136fd54-7474-486f-2768-8fcb1deaaa00/public) ## Receive an alert when a customer cancels their plan You can set up a workflow that enables you to check and approve cancellations. You might want to do this, for example, to be alerted when high value customers cancel. For details, refer to the [Plan cancellation request workflow](/workflows/example-workflows/plan-cancellation-request-workflow/).

# Billing - Manage plans - Create plans

> Step-by-step guide to creating plans in Kinde including plan groups, fixed charges, metered features, and tiered pricing configuration.

create plans, plan groups, fixed charges, metered features, tiered pricing, plan features, subscription fees
billing

Once you’ve got a plan strategy along with a plan feature list, prices, and details, you’re ready to create plans them in Kinde. All plans must belong to a plan group. When you create your first plan, it will be automatically added to the default group. A plan group can only contain either user plans or organization plans. When you create your first plan, we automatically create a group based on the plan type you select. <Aside> Remember you can create one charge or feature that can be used and redefined across all plans. E.g. You can have one ‘Base price’ charge that is defined as 0.00 in a free plan, 10.00 in a Plus plan, and 25.00 in a Pro plan. </Aside> ## Add a plan 1. Go to **Billing > Plans**. 2. If this is the first plan, select **Add plan** on the empty page. 3. If you already have plans, select **Add plan** in the top right. The **Add plan** window opens. ![Add plans window](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/a8a237d5-c242-45dc-453e-a7ad66e33a00/public) 4. Choose whether the plan is for **Organizations** or **Users**, or select the **Group** the plan belongs to. Only one of these options will appear. You cannot change these selections later. 5. Give the plan a **Name** (e.g. `Free`), a **Description**. This is the name that will also appear in the pricing table (if you use one). 6. Give your plan a **Key** for referencing in your code. This cannot be changed after a plan is published. 7. Select a **Default currency**. This field only appears if one has not been set. You can change this later in **Settings > Billing**, but only before any of your plans are published. 8. Select **Save**. ## Add a subscription fee or fixed charge to a plan A fixed charge is a recurring monthly charge such as base price or subscription fee. <Aside type="warning"> You need to create a $0.00 charge for Free plans. This ensures the plan is added to Stripe, and is included on the pricing table. </Aside> 1. Select **Add charge**. 1. If the charge exists, select **Use existing feature** then select it from the list. <Aside> You only need to create a new charge if the item is unique. For re-usable items such as ‘Base price’, select the existing charge but change the line item description and price for each plan. </Aside> 2. If this is a new charge, give it a name (e.g., `Base subscription fee`). If you’ll reuse this charge across plans, choose a generic name. This cannot be changed later. 2. Add a **Line item description**. This appears on the customer invoice, so might be more specific than the name, e.g. `Base subscription - Pro plan`. 3. Set the price. (You may be asked to set a default currency if you haven’t already). 4. Select **Save**. 5. Select **Save draft**. 6. Repeat from step 1 for each fixed charge you want to add, or start adding features. <Aside title="Feature price sync"> If you are successfully connected to Stripe and the charge is part of a published plan, it will show as `price synced`. Otherwise the charge will show as `price not synced`. </Aside> ## Add features (entitlements) to a plan Features describe the individual functions or entitlements that users get with their plan. These can be of the type metered (chargeable) or unmetered (included). <Aside type="warning"> You cannot change the Name, the Key or the Type of feature once you have created it. If you make an error, delete the feature and add a new one. </Aside> 1. Select **Add feature**. ![Add feature window](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/ceb95ba9-1c03-4ae7-89f9-275ab3185100/public) 2. To add a new feature, select **New unmetered** or **New metered**, then select **Next**. The **Add feature** window opens. 3. Enter a **Feature name**. Be sure to use something generic if you plan to use this feature again, e.g. `Included seats`. 4. Enter a **Description**. 5. Enter a **Key** for referencing the feature. 6. If you selected a unmetered feature, select **Save**. You’re done. Repeat from step 1 to add more features. 7. If you selected a metered feature, complete the rest of the details: ![Add feature window, select units](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/de016f2c-2477-4abd-9a2d-00e7c3e99300/public) 8. Enter the **Maximum units** allowed on the plan. Leave blank if there is no limit. 9. Enter the **Unit measurement** name, e.g. `license`, `MAU` 10. If the item is separately chargeable, select a **Pricing model**. ![Add feature window, tiered prices](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/80ea9a38-e6ac-479f-9697-f04e237d4d00/public) 11. Add a **Line item description**. This appears on the customer invoice, so might be more specific than the name, e.g. `Additional licenses for Pro (5)`. 12. For a flat unit price, enter the price and select **Save**. You’re finished. 13. For tiered pricing, select **Tiered - Graduated** and define each tier with unit numbers and add the price per unit. 14. Select **Add tier** to add a different price for higher unit tiers. For example, a unit might be $10 each if you use 1-10, but is $9 per unit if you use 11 or more. <Aside type="warning"> Ensure the tiered units amounts don’t overlap. E.g. make sure they follow a pattern like 1-10, 11-20, 21-30, etc. If you want to make it so an upper limit is limitless, E.g. 1-10, 11-(blank/limitless); use 1-10, 11-1,000,000 (or a very high number). Graduated unit fields can’t be left blank. </Aside> 15. Select **Save.** 16. In the **Plan** window, select **Save** to commit your changes. 17. Repeat for each feature you want to add to the plan. Then repeat this procedure for each plan. <Aside title="Feature price sync"> If you are successfully connected to Stripe and the feature is part of a published plan, it will show as `price synced`. Otherwise the feature will show as `price not synced`. </Aside> **Next:** [Step 5 Publish plans](/billing/get-started/publish-plans/)

# Billing - Manage plans - Plan upgrade and downgrade policies

> Guide to setting billing policies for plan upgrades, downgrades, and cancellations including usage billing and refund policies.

plan upgrade, plan downgrade, billing policies, usage billing, refund policies, cancellation policies
billing

If you offer different levels of paid plans, then you will need to facilitate plan upgrade or downgrade. Before you make plan changes, make sure you have set the policies. ## Set billing policies for cancellation and plan changes You can also set policies to control what happens when a customer cancels or changes their plan. The policies are for deciding if you charge or forgive unpaid usage of metered features, and if you refund or retain unused, paid subscription days. By default, unpaid usage is forgiven and you don't refund or credit for unused subscription days. 1. Go to **Settings > Environment > Billing** to set these policy defaults. 2. In the **Policies** section, choose the settings. ![Billing policies settings](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/1a4c3673-d972-4dd6-2c3a-d46b9eb70200/public) 3. Select **Save**.

# Billing - Manage subscribers - Add metered usage for a customer via API

> Guide to manually adding metered usage for customers via the Kinde API including agreement ID and feature code requirements.

metered usage, API, agreement ID, feature code, usage data, billing cycle
billing

From time to time, you may need to manually add metered usage for an individual customer. You can do this via the Kinde API. Adding usage values requires two key pieces of information: - your customer's agreement ID - the feature code you want to record usage against ## Get the agreement ID - [Via API](https://docs.kinde.com/kinde-apis/management/#tag/billing-agreements/get/api/v1/billing/agreements/). Include the `billing` expand parameter in your request to access the agreement ID. - Via the Kinde UI - Open the user or organization record in Kinde and select **Billing** in the menu. The customer agreement shows as part of the subscription details. ![Example of agreement ID in Kinde](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/6488a69d-a47d-413b-a3b3-47a39398b600/public) ## Get the feature ID 1. Open the plan the feature belongs to. 2. Edit the feature (to view it) in the plan. 3. Take note of the **Key**. ## Submit usage data POST the usage to the [meter usage record API](https://docs.kinde.com/kinde-apis/management/#tag/billing-meter-usage/post/api/v1/billing/meter_usage/) including the feature code and agreement ID to record a usage value. <Aside> Usage gets assigned to your customer's current billing cycle. Any usage submitted after a billing cycle ends will be recorded against the next billing cycle. </Aside>

# Billing - Manage subscribers - Respond to customer activity using webhooks

> Comprehensive guide to using Kinde billing webhooks to respond to customer activity including event triggers and automation examples.

billing webhooks, customer activity, JWT, event triggers, automation, subscription events, payment events
billing

Kinde's billing webhooks are outbound calls Kinde makes to your specified endpoint when particular billing events occur. You can use them to keep your application synchronized with Kinde's billing events, trigger automated actions to provide a seamless experience for your customers, and reduce the load on your support team. ## How Kinde webhooks work Kinde webhooks use HTTPS REST to send information about events to a verified external URL that you provide. When an event is triggered, Kinde dispatches a JSON Web Token (JWT) containing relevant data to your registered endpoint. It's essential to verify the authenticity of this JWT to confirm the request originated from Kinde and then decode it to access the event data. If your endpoint doesn't return a 200 OK response, Kinde will retry the webhook call using a back-off policy. More about webhooks: Manage [Kinde webhooks](/integrate/webhooks/about-webhooks/) via the Kinde interface, or via the [Kinde Management API](https://docs.kinde.com/kinde-apis/management/#tag/webhooks). ## Billing webhook triggers and examples ### A customer cancels their subscription * **Trigger**:`customer.agreement_cancelled` * **Description**: Triggered when a customer subscription is cancelled, this might be by the customer or by an admin * **Example**: Automatically deactivate premium features for a user in your application, initiate an offboarding sequence, or update their status in your CRM to "cancelled. ### A new agreement is created for a customer - **Trigger:** `customer.agreement_created` - **Description**: Triggered when a customer signs up to a plan or changes plans, and an agreement is created for the customer. - **Example**: Provision new services for the customer, send a welcome email confirming their subscription, or grant access to exclusive content. ### A customer's invoice becomes overdue * **Trigger:** `customer.invoice_overdue` * **Description**: Triggered when a customer's invoice becomes overdue. Usually only triggered in cases where payment is not automated. * **Example**: Send automated reminders to the customer about their outstanding payment, trigger a temporary suspension of services, or notify your accounts receivable team for follow-up. ### Metered usaage is recorded against a plan feature * **Trigger:** `customer.meter_usage_updated` * **Description**: Triggered when a customer's metered usage data is updated. * **Example**: Ideal for displaying real-time usage statistics to the customer within your app, calculating potential overage charges, or sending notifications if their usage approaches a predefined limit. ### A payment from a customer fails * **Trigger:** `customer.payment_failed` * **Description**: Triggered when a customer's payment attempt fails, for example due to insufficient funds or incorrect credit card details. * **Example**: Initiate a dunning process, prompt the customer to update their payment method, or temporarily restrict access to features until payment is resolved. ### A payment from a customer succeeds * **Trigger:** `customer.payment_succeeded` * **Description**: Triggered when a customer's payment is successfully processed. * **Example**: Confirm a payment receipt to the customer, unlock paid features, or record the successful transaction in your accounting system. ### A plan is associated with a customer in Kinde * **Trigger:** `customer.plan_assigned` * **Description**: Triggered when a customer is associated with a plan in Kinde. * **Example**: Activate the features associated with the newly assigned plan in your application, send a plan activation email, or update the customer's profile with their new plan details. ### A customer's plan changes (upgrade or downgrade) * **Trigger:** `customer.plan_changed` * **Description**: Triggered when a customer's billing plan is changed (e.g., upgraded or downgraded). * **Example**: Adjust the customer's feature access based on the new plan, update their billing cycle information, or notify relevant internal teams about the plan changes.

# Billing - Manage subscribers - Subscription upgrade and downgrade methods

> Guide to upgrading and downgrading customer subscriptions including self-serve portal, manual changes, and API methods.

subscription upgrade, subscription downgrade, plan changes, self-serve portal, API, billing policies
billing

Customers will eventually want to change the plan they are on and you need a way to alter their subscription. ## How to upgrade or downgrade a plan subscription - Set up the self-serve portal and allow customers to manage their own subscriptions. See [self-serve portal for orgs](/build/self-service-portal/self-serve-portal-for-orgs/) and [self-serve portal for users](/build/self-service-portal/self-serve-portal-for-users/). In this scenario, the user will select the new plan from the pricing table. - Manually upgrade or downgrade via the Kinde UI (see below) - Overwrite the current agreement (subscription) by [creating a new one via API](/kinde-apis/management/#tag/billing-agreements/post/api/v1/billing/agreements/) ## Change a plan subscription for an organization (B2B) or user (B2C) 1. Open the organization or user record in Kinde. - Go to **Organizations** and locate the org. - Go to **Users** and locate the user. 2. Select **Billing** in the side menu. Details of the org's or user's plan are shown. 3. Select **Change plan**. 4. In the dialog that appears, select the new plan. 5. Select **Save**. The customer's plan is now updated. Depending on the [billing policies](/billing/manage-plans/upgrade-downgrade-plans/) you have set, this information will be synced to Stripe and an invoice credit or bill will be issued.

# Billing - Payment management - Manage Stripe connection

> Guide to managing the Stripe connection in Kinde including connection status monitoring, troubleshooting, and disconnection procedures.

Stripe connection, connection status, troubleshooting, business information, identity verification, disconnect
billing

When you connect to Stripe as part of Kinde's billing feature, a new Stripe account is created for you. You cannot connect an existing Stripe account. When you first connect Stripe as part of the setup flow, you need to set up the new Stripe account with all your business and other details to make the connection active. To connect, follow [this process](/billing/get-started/connect-to-stripe/). You can then manage the connection in **Settings > Billing**. ![Stripe connection card in Kinde](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/859d5538-db3c-4244-3dbe-7a2ff2c04b00/public) ## Manage the Stripe connection The Stripe connection status (see below) lets you know if Stripe is connected or if you need to take action. Statuses include: - `Connecting` means Stripe is still sending information to Kinde about the account status. It should not take long to sync. - `In progress` indicates that Stripe has connected to Kinde, but still requires some additional details from you in order to fully set up the account. Select **Update Stripe information** to complete the Stripe onboarding. You need to do this before plans can be made available to your customers. - `Connected` means Stripe is successfully syncing data with Kinde and you’re ready to publish plans. You may also see an error and message, letting you know what action is needed. To add and edit Stripe business information, select **Update Stripe information**. ## Disconnect Stripe This action is not reversible. 1. Go to **Settings > Environment > Billing**. 2. On the Stripe connection card, select the three dots, then select **Disconnect**. 3. In the confirmation window, select **Disconnect billing connection**. ## Troubleshoot Stripe issues Stripe requires that your account is set up properly before connecting successfully. Here's some common reasons why the Stripe connection status remains **In progress**. - Incomplete business information - contact, tax, or other business details - Identity verification - where you need to upload a copy of your ID To add details in Stripe, select the **Update Stripe information** option.

# Billing - Payment management - Connect payment processor (Stripe)

> Step-by-step guide to connecting Stripe payment gateway to Kinde including onboarding flow and connection status management.

payment gateway, Stripe connection, onboarding flow, business information, connection status, test environment
billing

Kinde’s billing feature comes with a dependency on third party payment processor, specifically [Stripe Billing](https://stripe.com/au/billing). A payment processor holds credit card details, processes payments, applies tax, and generally handles all the financial side of billing. For now, only [Stripe](https://stripe.com), a known and reliable payments processing platform, is supported. A new Stripe account is automatically created for you when you set up billing in Kinde. <Aside type="warning"> You can’t currently connect your existing Stripe account, but you will be able to copy across your business information from your existing account to the new account. This is a Stripe-imposed limitation for third party integrations. We’re working on a migration strategy. </Aside> 1. If you are testing billing, switch to your non-production environment. 2. Go to **Settings > Environment > Billing**. 3. Select **Connect Stripe account**. Kinde initiates the connection and adds the connection card. ![Stripe card connection in Kinde](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/f3797997-6681-41c8-a297-4a962d5d0500/public) 4. Select **Update Stripe information**. This kicks off a Stripe onboarding flow. You will see a Stripe-generated screen to enter details. ![Kinde Stripe onboarding flow start screen](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/71b08393-f43d-4f91-3268-7501e08d3f00/public) <Aside> If the Stripe flow doesn’t appear and you remain in the Kinde dashboard, select **Update Stripe information.** </Aside> 5. Enter the email that will be associated with the Stripe account and select **Submit**. The next step depends if you have a Stripe account already associated with your email address. 1. **If you are in the test environment**, you’ll be prompted through a flow. You can continue or select **Return to Kinde**. 2. **If you are in a production environment,** you will be asked if you want to use details from an existing Stripe account or make a new one: 1. If you select existing, account details from the existing account will be used, but no other data will come across. 2. If you select to make a new one, you will be prompted to enter all your business details. This can take a while. 3. Follow the prompts as far as you want. Select **Return to Kinde**. <Aside> You can select **Return to Kinde** at any time. You do not have to set up the connection fully until you are ready to publish plans. Any time you want to complete the setup, select **Update Stripe information**. </Aside> 6. When you complete the Stripe onboarding, or opt out by selecting **Return to Kinde**, the connection card on the Kinde **Billing** page shows the connection status. ![Connection status on Kinde stripe card](https://imagedelivery.net/skPPZTHzSlcslvHjesZQcQ/f4eb395b-069e-42c3-ab4f-d78cc52e8800/public) - `Connecting` means Stripe is still sending information to Kinde about the account status. It should not take long to sync. - `In progress` indicates that Stripe has connected to Kinde, but still requires some additional details from you in order to fully set up the account. Select **Update Stripe information** to complete the Stripe onboarding. You need to do this before plans can be made available to your customers. - `Connected` means Stripe is successfully syncing data with Kinde and you’re ready to publish plans.

# Billing - Pricing - Pricing models

> Comprehensive guide to pricing models in Kinde including flat rate, usage-based, tiered, and per-feature pricing strategies.

pricing models, flat rate pricing, usage-based pricing, tiered pricing, per-feature pricing, SaaS pricing strategy
billing

A pricing model refers to the structured approach businesses use to charge customers for products and services, often based on factors like usage, feature access, or licensing. In Kinde, each feature you include in a plan has a pricing model attached. This topic describes some examples of pricing models you can apply in Kinde, when you might want to use them, and how to [set them up in your Kinde plans](/billing/manage-plans/create-plans/). ## Pricing decisions There's a lot of information available about SaaS pricing strategy, and many things to consider. Research the market and map out an approach that works for your business now and as you grow, before setting up plans for the first time. We will also add more flexibility and variation for pricing models in Kinde, as our billing feature develops. ## Flat rate pricing (e.g. subscription pricing) Where you want to charge a periodic (e.g. monthly) flat fee for access to your product or services. Higher plans may include access to more features, or have higher access limits. In Kinde, create a **Fixed charge** and call it something like `Subscription fee`. Re-use this charge in each plan, and change the price and line item description. - Example - Basic plan 5.00, Team plan 20.00, Business plan 75.00. ## Usage-based (metered or tiered) pricing Where you charge customers for what they use. For example, monthly active users, data storage, transactions, etc. For each individual plan you can treat this as fully pay-as-you-go, or charge volume prices so the price goes down the more units are used. You can set limits for usage based pricing or leave as limitless. Limits can make plan upgrade more attractive. <Aside> If you need to, you can [add metered amounts to individual customer plans via the Kinde API](/billing/manage-subscribers/add-metered-usage/). </Aside> ### Usage pricing - per unit In Kinde, add a **New metered feature**, e.g. `Data storage`. Leave **Maximum units** blank for limitless, or set a limit. Select a **per unit** pricing model. Set a price for each unit. E.g. - Example - Basic plan is 00.30 per unit, Team plan is 00.20 per unit, Business plan is 00.10 per unit. ### Usage pricing - volume pricing In Kinde, add a **New metered feature**, e.g. `Token generation`. Leave **Maximum units** blank for limitless (you might do this for the highest plan only), or set a limit per plan. Select the **Tiered graduated** pricing model. Set the price for each unit tier for each plan. E.g. - Basic plan (100 unit limit) 0-10 tokens / 0.50 per token, 11-20 tokens / 0.35 per token, 21-100 tokens / 0.20 per token. - Team plan (250 unit limit) 0-10 tokens / 0.40 per token, 11-20 tokens / 0.30 per token, 21-100 tokens / 0.15 per token. - Business plan (No unit limit) 0-100 tokens / 0.15 per token, 101-250 tokens / 0.10 per token, 251-1,000,000,000 tokens / 0.05 per token. (Note you need to include an upper tier limit even if you offer limitless, just use a really high number.) ## Per feature pricing Where you charge per feature or module in your SaaS model. This approach can make plan pricing transparent and make it easy for customers to choose the right plan. It can also help you group "expensive" or more "enterprise" features for inclusion in higher plans. However, it can also be challenging to decide what features should be in or out of specific plans, and to provision and gate each feature in-product. If you want to charge based on features, we recommend using a subscription model, and then including/excluding features for your plan levels. - Example - Basic plan 10.00 for features A-E. Team plan 20.00 for features A-N. Business plan 75.00 for features A-Z. Another way to approach this is to included limited metered features per plan, so that all customers get a "taste" of features, but to get more of one you need to upgrade. - Example - Basic plan 10.00 for features A-E (plus one each of F & G). Team plan 20.00 for features A-N (Plus two of U & V). Business plan 75.00 for features A-Z. ## Support and feedback Email support@kinde.com if you need a different pricing model than those listed above, or if you need help setting up your plan pricing.

