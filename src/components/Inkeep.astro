<script>
    // Get the button element
    const inkeepTriggers = document.querySelectorAll("[kui-trigger='search']");

    function handleOpenChange(newOpen) {
        inkeepWidget?.update({modalSettings: {isOpen: newOpen}});
    }

    const handleOpen = () => {
        const isInkeepActive = document.body.classList.contains("inkeep-active");
        if (isInkeepActive) {
            inkeepWidget?.update({
                modalSettings: {
                    isOpen: true
                }
            });
        } else {
            initializeInkeep();
        }
    };

    const baseSettings = {
        apiKey: import.meta.env.PUBLIC_INKEEP_API_KEY!, // required
        primaryBrandColor: "#0f0f0f",
        organizationDisplayName: "Kinde",
        colorMode: {
            sync: {
                target: document.documentElement,
                attributes: ["data-theme"],
                isDarkMode: (attributes) => attributes["data-theme"] === "dark"
            }
        },
        theme: {
            styles: [
                {
                    type: "link",
                    value: "/vendors/inkeep.css"
                }
            ]
        }
    };
    const aiChatSettings = {
        chatSubjectName: "Kinde",
        aiAssistantAvatar: {
            light: "/bot-avatar-light.png",
            dark: "/bot-avatar-dark.png"
        },
        getHelpOptions: [
            {
                name: "Slack",
                action: {
                    type: "open_link",
                    url: "https://join.slack.com/t/thekindecommunity/shared_invite/zt-2k5i0aeet-d6Z_2qYphcNCpj0bFa4oCg"
                },
                icon: {
                    builtIn: "FaSlack"
                }
            },
            {
                name: "Discord",
                action: {
                    type: "open_link",
                    url: "https://discord.gg/wHX6j7wG5d"
                },
                icon: {
                    builtIn: "FaDiscord"
                }
            },
            {
                name: "Github",
                action: {
                    type: "open_link",
                    url: "https://github.com/kinde-oss"
                },
                icon: {
                    builtIn: "FaGithub"
                }
            }
        ],
        exampleQuestions: [
            "Where do I set up my authentication methods?",
            "How can I be notified when certain events happen?",
            "What's the quickest way to get started with Kinde?"
        ]
    };

    const modalSettings = {
        isOpen: false,
        onOpenChange: handleOpenChange
    };

    const searchSettings = {
        tabs: []
    };

    const config = {
        baseSettings,
        aiChatSettings,
        modalSettings,
        searchSettings
    };

    // Embed the widget using the `Inkeep.embed()` function.
    let inkeepWidget: any;
    // Add event listener to open the Inkeep modal when the button is clicked
    inkeepTriggers.forEach((trigger) => trigger.addEventListener("click", handleOpen));

    function initializeInkeep() {
        import("@inkeep/cxkit-js")
            .then(() => {
                if (window?.Inkeep?.ModalSearchAndChat) {
                    inkeepWidget = window.Inkeep.ModalSearchAndChat(config as any);
                }

                document.body.classList.add("inkeep-active");
            })
            .then(() => {
                setTimeout(() => {
                    inkeepWidget?.update({
                        modalSettings: {
                            isOpen: true
                        }
                    });
                }, 50);
            })
            .catch((error) => console.log(error));
    }

    document.addEventListener("keydown", function (event) {
        const target = event.target;
        const isInputFocused =
            target.tagName === "INPUT" ||
            target.tagName === "TEXTAREA" ||
            target.isContentEditable;
    
        // Check if `/` key is pressed, and we are NOT focused on an input
        if (!isInputFocused && event.key === "/" && !event.metaKey && !event.ctrlKey) {
            event.preventDefault();
            handleOpen();
        }
    
        // Check if Cmd (Meta) + K or Ctrl + K is pressed
        if ((event.metaKey || event.ctrlKey) && event.key.toLowerCase() === "k") {
            event.preventDefault();
            handleOpen();
        }
    });

</script>
